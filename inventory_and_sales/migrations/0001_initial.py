# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-05-31 09:37
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category of a product. Eg: Raw/Final', max_length=255, unique=True)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the customer', max_length=255, verbose_name='Name')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(blank=True, default=None, help_text='Address of Customer', max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, help_text='Name of City to which customer belongs', max_length=255)),
                ('email_id', models.EmailField(blank=True, max_length=254, null=True)),
                ('date', models.DateField(auto_now_add=True, help_text='Date when customer was acquired', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Thing you use to create your product', max_length=255, unique=True)),
                ('cost', models.FloatField(verbose_name='Cost Price')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_status', models.BooleanField(help_text='Is the order delivered?')),
                ('payment_status', models.BooleanField(help_text='Is the payment received from customer?')),
                ('Datetime', models.DateTimeField(default=datetime.datetime(2020, 5, 31, 15, 7, 42, 910550), help_text='Date and time when order was placed', null=True)),
                ('total_price', models.FloatField(default=0.0, null=True, verbose_name='Total Amount')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_and_sales.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, help_text='units of product sold to customer')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_and_sales.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of Item', max_length=255, unique=True)),
                ('quantity', models.IntegerField(help_text='Quantity of item stored')),
                ('unit', models.CharField(blank=True, help_text='units of quantity', max_length=255, null=True)),
                ('profit_percent', models.IntegerField(default=0, help_text='profit in % that you want from this product')),
                ('cost_price', models.FloatField(blank=True, help_text='Cost of your own purchase/cost of production of this product', null=True)),
                ('selling_price', models.FloatField(default=0.0, help_text='Selling price of product')),
                ('category', models.ForeignKey(help_text='Category of this product item', on_delete=django.db.models.deletion.CASCADE, to='inventory_and_sales.Category')),
                ('ingredients', models.ManyToManyField(related_name='ingredients', to='inventory_and_sales.Ingredient')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_and_sales.Product'),
        ),
    ]
